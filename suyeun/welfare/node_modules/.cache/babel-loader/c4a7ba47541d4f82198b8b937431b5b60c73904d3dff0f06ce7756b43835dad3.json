{"ast":null,"code":"var _jsxFileName = \"C:\\\\kdigital_toyproject\\\\suyeun\\\\welfare\\\\src\\\\components\\\\loginpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [showSignupModal, setShowSignupModal] = useState(false); // State to control the visibility of the signup modal\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // 간단한 로그인 체크 (예시이므로 실제 서버 인증은 필요하지 않음)\n    if (username === 'user' && password === 'password') {\n      setMessage('로그인 성공!');\n    } else {\n      setMessage('로그인 실패. 올바른 정보를 입력하세요.');\n    }\n  };\n  const handleSignupSubmit = e => {\n    e.preventDefault();\n    // Perform signup logic here (e.g., sending data to the server)\n\n    // For this example, let's assume signup is successful\n    setMessage('회원가입 성공!');\n    setShowSignupModal(false); // Close the signup modal after successful signup\n  };\n\n  const handleSignupModalOpen = () => {\n    setShowSignupModal(true); // Show the signup modal when \"회원가입\" button is clicked\n  };\n\n  const handleSignupModalClose = () => {\n    setShowSignupModal(false); // Close the signup modal when the close button is clicked\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showSignupModal &&\n    /*#__PURE__*/\n    // Conditionally render the signup modal\n    _jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleSignupModalClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignupSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newUsername\",\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newUsername\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newCall\",\n            children: \"\\uC804\\uD654\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newCall\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newEmail\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"newEmail\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"signup-button\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"nR6mno4QyymYg9CsPveBZMK/MjE=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","message","setMessage","showSignupModal","setShowSignupModal","handleSubmit","e","preventDefault","handleSignupSubmit","handleSignupModalOpen","handleSignupModalClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","required","_c","$RefreshReg$"],"sources":["C:/kdigital_toyproject/suyeun/welfare/src/components/loginpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [showSignupModal, setShowSignupModal] = useState(false); // State to control the visibility of the signup modal\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // 간단한 로그인 체크 (예시이므로 실제 서버 인증은 필요하지 않음)\r\n    if (username === 'user' && password === 'password') {\r\n      setMessage('로그인 성공!');\r\n    } else {\r\n      setMessage('로그인 실패. 올바른 정보를 입력하세요.');\r\n    }\r\n  };\r\n\r\n  const handleSignupSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Perform signup logic here (e.g., sending data to the server)\r\n\r\n    // For this example, let's assume signup is successful\r\n    setMessage('회원가입 성공!');\r\n    setShowSignupModal(false); // Close the signup modal after successful signup\r\n  };\r\n\r\n  const handleSignupModalOpen = () => {\r\n    setShowSignupModal(true); // Show the signup modal when \"회원가입\" button is clicked\r\n  };\r\n\r\n  const handleSignupModalClose = () => {\r\n    setShowSignupModal(false); // Close the signup modal when the close button is clicked\r\n  };\r\n\r\n  return (\r\n    <div className='loginpage'>\r\n      {/* ... (Your existing code) */}\r\n      <p>{message}</p>\r\n\r\n      {showSignupModal && ( // Conditionally render the signup modal\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={handleSignupModalClose}>\r\n              &times;\r\n            </span>\r\n            <form onSubmit={handleSignupSubmit}>\r\n              <h3>회원가입</h3>\r\n              <label htmlFor=\"newUsername\">아이디</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"newUsername\"\r\n                required\r\n              />\r\n              <label htmlFor=\"newPassword\">새 비밀번호</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                required\r\n              />\r\n              <label htmlFor=\"newCall\">전화번호</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"newCall\"\r\n                required\r\n              />\r\n              <label htmlFor=\"newEmail\">이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"newEmail\"\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"signup-button\">회원가입</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}