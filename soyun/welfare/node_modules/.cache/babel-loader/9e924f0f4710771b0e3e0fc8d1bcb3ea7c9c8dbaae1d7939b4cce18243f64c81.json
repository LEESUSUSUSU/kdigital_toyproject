{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\kdigital_toyproject\\\\kdigital_toyproject\\\\soyun\\\\welfare\\\\src\\\\components\\\\loginpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoginModal from './LoginModal';\nimport SignupModal from './SignupModal';\nimport axios from 'axios';\nimport './LoginCss.css';\nimport { LoginAtoms } from './Atoms/LoginAtoms';\nimport { useRecoilState } from \"recoil\";\n\n//실제로 작동하는 login form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showSignupModal, setShowSignupModal] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [message, setMessage] = useState('');\n  const [loginstate, setLoginstate] = useRecoilState(LoginAtoms);\n  const handleLoginModalOpen = () => {\n    setShowLoginModal(true);\n  };\n  const handleSignupSubmit = async e => {\n    e.preventDefault();\n    const newUsername = document.getElementById('newUsername').value;\n    const newPassword = document.getElementById('newPassword').value;\n    const newTel = document.getElementById('newTel').value;\n    const newEmail = document.getElementById('newEmail').value;\n    try {\n      const response = await fetch('http://localhost:8080/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: newUsername,\n          password: newPassword,\n          tel: newTel,\n          email: newEmail\n        })\n      });\n      if (response.ok) {\n        //회원가입 성공시\n        var option = \"width = 300, height = 300, top = 100, left = 200, location = no\";\n        window.open(`/DeletePost/`, \"이름\", option);\n        setMessage('회원가입 성공!');\n        setShowSignupModal(false);\n      } else {\n        setMessage('회원가입 실패. 서버 오류가 발생했습니다1.');\n      }\n    } catch (error) {\n      setMessage('회원가입 실패. 서버 오류가 발생했습니다2.');\n    }\n  };\n  const handleLoginModalClose = () => {\n    setShowLoginModal(false);\n  };\n  const handleSignupModalOpen = () => {\n    setShowSignupModal(true);\n  };\n  const handleSignupModalClose = () => {\n    setShowSignupModal(false);\n  };\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setShowLoginModal(false);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setLoginstate(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginpage\",\n    children: [loginstate == 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"login-button\",\n          onClick: handleLoginModalOpen,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"signup-button\",\n          onClick: handleSignupModalOpen,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(LoginModal, {\n      showModal: showLoginModal,\n      closeModal: handleLoginModalClose,\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignupModal, {\n      showModal: showSignupModal,\n      closeModal: handleSignupModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"LEp8bLkdbXdoOlD9YaxYNc4XXLw=\", false, function () {\n  return [useRecoilState];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","LoginModal","SignupModal","axios","LoginAtoms","useRecoilState","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","showLoginModal","setShowLoginModal","showSignupModal","setShowSignupModal","isLoggedIn","setIsLoggedIn","message","setMessage","loginstate","setLoginstate","handleLoginModalOpen","handleSignupSubmit","e","preventDefault","newUsername","document","getElementById","value","newPassword","newTel","newEmail","response","fetch","method","headers","body","JSON","stringify","username","password","tel","email","ok","option","window","open","error","handleLoginModalClose","handleSignupModalOpen","handleSignupModalClose","handleLoginSuccess","handleLogout","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","showModal","closeModal","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/kdigital_toyproject/kdigital_toyproject/soyun/welfare/src/components/loginpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LoginModal from './LoginModal';\r\nimport SignupModal from './SignupModal';\r\nimport axios from 'axios';\r\nimport './LoginCss.css';\r\nimport {LoginAtoms} from './Atoms/LoginAtoms'\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n\r\n//실제로 작동하는 login form\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showSignupModal, setShowSignupModal] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [loginstate, setLoginstate] = useRecoilState(LoginAtoms);\r\n\r\n  const handleLoginModalOpen = () => {\r\n    setShowLoginModal(true);\r\n  };\r\n\r\n  const handleSignupSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUsername = document.getElementById('newUsername').value;\r\n    const newPassword = document.getElementById('newPassword').value;\r\n    const newTel = document.getElementById('newTel').value;\r\n    const newEmail = document.getElementById('newEmail').value;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: newUsername,\r\n          password: newPassword,\r\n          tel: newTel,\r\n          email: newEmail,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        //회원가입 성공시\r\n        var option =  \"width = 300, height = 300, top = 100, left = 200, location = no\"\r\n        window.open(`/DeletePost/`, \"이름\", option)\r\n        setMessage('회원가입 성공!');\r\n        setShowSignupModal(false); \r\n      } else {\r\n        setMessage('회원가입 실패. 서버 오류가 발생했습니다1.');\r\n      }\r\n    } catch (error) {\r\n      setMessage('회원가입 실패. 서버 오류가 발생했습니다2.');\r\n    }\r\n  };\r\n\r\n  const handleLoginModalClose = () => {\r\n    setShowLoginModal(false);\r\n  };\r\n\r\n  const handleSignupModalOpen = () => {\r\n    setShowSignupModal(true);\r\n  };\r\n\r\n  const handleSignupModalClose = () => {\r\n    setShowSignupModal(false);\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsLoggedIn(true);\r\n    setShowLoginModal(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    setLoginstate(0);\r\n  };\r\n\r\n  return (\r\n    <div className='loginpage'>\r\n      {loginstate == 1 ? (\r\n        <button type=\"button\" className=\"logout-button\" onClick={handleLogout}>\r\n          로그아웃\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <div>\r\n          <button type=\"button\" className=\"login-button\" onClick={handleLoginModalOpen}>\r\n            로그인\r\n          </button>\r\n          <button type=\"button\" className=\"signup-button\" onClick={handleSignupModalOpen}>\r\n            회원가입\r\n          </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      \r\n      <LoginModal showModal={showLoginModal} closeModal={handleLoginModalClose} onLoginSuccess={handleLoginSuccess} />\r\n      <SignupModal showModal={showSignupModal} closeModal={handleSignupModalClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}