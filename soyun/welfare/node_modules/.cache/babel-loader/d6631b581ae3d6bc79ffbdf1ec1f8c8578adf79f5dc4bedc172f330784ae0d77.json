{"ast":null,"code":"var _jsxFileName = \"C:\\\\kdigital_toyproject\\\\suyeun\\\\welfare\\\\src\\\\components\\\\loginpage.js\",\n  _s = $RefreshSig$();\n// loginpage.js\n\nimport React, { useState } from 'react';\nimport loginpageC from './loginpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // 간단한 로그인 체크 (예시이므로 실제 서버 인증은 필요하지 않음)\n    if (formData.username === 'user' && formData.password === 'password') {\n      setMessage('로그인 성공!');\n    } else {\n      setMessage('로그인 실패. 올바른 정보를 입력하세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: loginpageC.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true,\n        className: loginpageC.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true,\n        className: loginpageC.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: loginpageC.button,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: loginpageC.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"GyHqhtHv2Ti5eKujcu4jBnqkLe8=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","loginpageC","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","username","password","message","setMessage","handleChange","e","name","value","target","prevFormData","handleSubmit","preventDefault","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","input","button","_c","$RefreshReg$"],"sources":["C:/kdigital_toyproject/suyeun/welfare/src/components/loginpage.js"],"sourcesContent":["// loginpage.js\r\n\r\nimport React, { useState } from 'react';\r\nimport loginpageC from './loginpage.css';\r\n\r\nconst LoginForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // 간단한 로그인 체크 (예시이므로 실제 서버 인증은 필요하지 않음)\r\n    if (formData.username === 'user' && formData.password === 'password') {\r\n      setMessage('로그인 성공!');\r\n    } else {\r\n      setMessage('로그인 실패. 올바른 정보를 입력하세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={loginpageC.container}>\r\n      <h2>로그인</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">사용자 이름:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n          className={loginpageC.input}\r\n        />\r\n        <label htmlFor=\"password\">비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n          className={loginpageC.input}\r\n        />\r\n        <button type=\"submit\" className={loginpageC.button}>\r\n          로그인\r\n        </button>\r\n      </form>\r\n      {message && <p className={loginpageC.message}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}