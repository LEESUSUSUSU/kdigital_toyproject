{"ast":null,"code":"// import React, { useState } from 'react';\n// import LoginModal from './LoginModal';\n// import SignupModal from './SignupModal';\n// import axios from 'axios';\n// import './LoginCss.css';\n// import {LoginAtoms} from './Atoms/LoginAtoms'\n// import { useRecoilState } from \"recoil\";\n\n// const Loginpage = () => {\n//   const [showLoginModal, setShowLoginModal] = useState(false);\n//   const [showSignupModal, setShowSignupModal] = useState(false);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [message, setMessage] = useState('');\n//   const [loginstate, setLoginstate] = useRecoilState(LoginAtoms);\n\n//   const handleLoginModalOpen = () => {\n//     setShowLoginModal(true);\n//   };\n\n//   const handleSignupSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const newUsername = document.getElementById('newUsername').value;\n//     const newPassword = document.getElementById('newPassword').value;\n//     const newTel = document.getElementById('newTel').value;\n//     const newEmail = document.getElementById('newEmail').value;\n\n//     try {\n//       const response = await axios.post('/api/signup', {\n//         username: newUsername,\n//         password: newPassword,\n//         tel: newTel,\n//         email: newEmail,\n//       });\n\n//       if (response.status === 200) {\n//         setMessage('회원가입 성공!');\n//         setShowSignupModal(false); \n//       } else {\n//         setMessage('회원가입 실패. 이미 존재하는 아이디입니다.');\n//         console.log(\"error1\")\n//       }\n//     } catch (error) {\n//       setMessage('회원가입 실패. 이미 존재하는 아이디입니다.');\n//       console.log(\"error2\")\n//     }\n//   };\n\n//   const handleLoginModalClose = () => {\n//     setShowLoginModal(false);\n//   };\n\n//   const handleSignupModalOpen = () => {\n//     setShowSignupModal(true);\n//   };\n\n//   const handleSignupModalClose = () => {\n//     setShowSignupModal(false);\n//   };\n\n//   const handleLoginSuccess = () => {\n//     setIsLoggedIn(true);\n//     setShowLoginModal(false);\n//   };\n\n//   const handleLogout = () => {\n//     setIsLoggedIn(false);\n//     setLoginstate(0);\n//   };\n\n//   return (\n//     <div className='loginpage'>\n//       {loginstate == 1 ? (\n//         <button type=\"button\" className=\"logout-button\" onClick={handleLogout}>\n//           로그아웃\n//         </button>\n//       ) : (\n//         <>\n//           <div>\n//           <button type=\"button\" className=\"login-button\" onClick={handleLoginModalOpen}>\n//             로그인\n//           </button>\n//           <button type=\"button\" className=\"signup-button\" onClick={handleSignupModalOpen}>\n//             회원가입\n//           </button>\n//           </div>\n//         </>\n//       )}\n\n//       <LoginModal showModal={showLoginModal} closeModal={handleLoginModalClose} onLoginSuccess={handleLoginSuccess} />\n//       <SignupModal showModal={showSignupModal} closeModal={handleSignupModalClose} />\n//     </div>\n//   );\n// };\n\n// export default Loginpage;","map":{"version":3,"names":[],"sources":["C:/Users/user/Desktop/kdigital_toyproject/kdigital_toyproject/soyun/welfare/src/components/loginpage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import LoginModal from './LoginModal';\r\n// import SignupModal from './SignupModal';\r\n// import axios from 'axios';\r\n// import './LoginCss.css';\r\n// import {LoginAtoms} from './Atoms/LoginAtoms'\r\n// import { useRecoilState } from \"recoil\";\r\n\r\n\r\n\r\n\r\n// const Loginpage = () => {\r\n//   const [showLoginModal, setShowLoginModal] = useState(false);\r\n//   const [showSignupModal, setShowSignupModal] = useState(false);\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [message, setMessage] = useState('');\r\n//   const [loginstate, setLoginstate] = useRecoilState(LoginAtoms);\r\n\r\n//   const handleLoginModalOpen = () => {\r\n//     setShowLoginModal(true);\r\n//   };\r\n\r\n//   const handleSignupSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const newUsername = document.getElementById('newUsername').value;\r\n//     const newPassword = document.getElementById('newPassword').value;\r\n//     const newTel = document.getElementById('newTel').value;\r\n//     const newEmail = document.getElementById('newEmail').value;\r\n\r\n//     try {\r\n//       const response = await axios.post('/api/signup', {\r\n//         username: newUsername,\r\n//         password: newPassword,\r\n//         tel: newTel,\r\n//         email: newEmail,\r\n//       });\r\n\r\n//       if (response.status === 200) {\r\n//         setMessage('회원가입 성공!');\r\n//         setShowSignupModal(false); \r\n//       } else {\r\n//         setMessage('회원가입 실패. 이미 존재하는 아이디입니다.');\r\n//         console.log(\"error1\")\r\n//       }\r\n//     } catch (error) {\r\n//       setMessage('회원가입 실패. 이미 존재하는 아이디입니다.');\r\n//       console.log(\"error2\")\r\n//     }\r\n//   };\r\n\r\n//   const handleLoginModalClose = () => {\r\n//     setShowLoginModal(false);\r\n//   };\r\n\r\n//   const handleSignupModalOpen = () => {\r\n//     setShowSignupModal(true);\r\n//   };\r\n\r\n//   const handleSignupModalClose = () => {\r\n//     setShowSignupModal(false);\r\n//   };\r\n\r\n//   const handleLoginSuccess = () => {\r\n//     setIsLoggedIn(true);\r\n//     setShowLoginModal(false);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     setIsLoggedIn(false);\r\n//     setLoginstate(0);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='loginpage'>\r\n//       {loginstate == 1 ? (\r\n//         <button type=\"button\" className=\"logout-button\" onClick={handleLogout}>\r\n//           로그아웃\r\n//         </button>\r\n//       ) : (\r\n//         <>\r\n//           <div>\r\n//           <button type=\"button\" className=\"login-button\" onClick={handleLoginModalOpen}>\r\n//             로그인\r\n//           </button>\r\n//           <button type=\"button\" className=\"signup-button\" onClick={handleSignupModalOpen}>\r\n//             회원가입\r\n//           </button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n      \r\n//       <LoginModal showModal={showLoginModal} closeModal={handleLoginModalClose} onLoginSuccess={handleLoginSuccess} />\r\n//       <SignupModal showModal={showSignupModal} closeModal={handleSignupModalClose} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Loginpage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}