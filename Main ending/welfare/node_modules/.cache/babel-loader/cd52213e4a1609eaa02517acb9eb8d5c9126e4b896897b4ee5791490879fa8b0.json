{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\kdigital_toyproject\\\\kdigital_toyproject\\\\soyun\\\\welfare\\\\src\\\\components\\\\loginpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoginModal from './LoginModal';\nimport SignupModal from './SignupModal';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showSignupModal, setShowSignupModal] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleLoginModalOpen = () => {\n    setShowLoginModal(true);\n  };\n  const handleSignupSubmit = async e => {\n    e.preventDefault();\n    const newUsername = document.getElementById('newUsername').value;\n    const newPassword = document.getElementById('newPassword').value;\n    const newTel = document.getElementById('newTel').value;\n    const newEmail = document.getElementById('newEmail').value;\n    try {\n      const response = await axios.post('/api/signup', {\n        username: newUsername,\n        password: newPassword,\n        tel: newTel,\n        email: newEmail\n      });\n      if (response.status === 200) {\n        setMessage('회원가입 성공!');\n        setShowSignupModal(false); // Close the signup modal after successful signup\n      } else {\n        setMessage('회원가입 실패. 서버 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      setMessage('회원가입 실패. 서버 오류가 발생했습니다.');\n    }\n  };\n  const handleLoginModalClose = () => {\n    setShowLoginModal(false);\n  };\n  const handleSignupModalOpen = () => {\n    setShowSignupModal(true);\n  };\n  const handleSignupModalClose = () => {\n    setShowSignupModal(false);\n  };\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setShowLoginModal(false);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginpage\",\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"login-button\",\n        onClick: handleLoginModalOpen,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"signup-button\",\n        onClick: handleSignupModalOpen,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(LoginModal, {\n      showModal: showLoginModal,\n      closeModal: handleLoginModalClose,\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignupModal, {\n      showModal: showSignupModal,\n      closeModal: handleSignupModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"4FaggY2vhdMjedW3NgZxK3c1ciw=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","LoginModal","SignupModal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","showLoginModal","setShowLoginModal","showSignupModal","setShowSignupModal","isLoggedIn","setIsLoggedIn","message","setMessage","handleLoginModalOpen","handleSignupSubmit","e","preventDefault","newUsername","document","getElementById","value","newPassword","newTel","newEmail","response","post","username","password","tel","email","status","error","handleLoginModalClose","handleSignupModalOpen","handleSignupModalClose","handleLoginSuccess","handleLogout","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","showModal","closeModal","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/kdigital_toyproject/kdigital_toyproject/soyun/welfare/src/components/loginpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LoginModal from './LoginModal';\r\nimport SignupModal from './SignupModal';\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showSignupModal, setShowSignupModal] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleLoginModalOpen = () => {\r\n    setShowLoginModal(true);\r\n  };\r\n\r\n  const handleSignupSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUsername = document.getElementById('newUsername').value;\r\n    const newPassword = document.getElementById('newPassword').value;\r\n    const newTel = document.getElementById('newTel').value;\r\n    const newEmail = document.getElementById('newEmail').value;\r\n\r\n    try {\r\n      const response = await axios.post('/api/signup', {\r\n        username: newUsername,\r\n        password: newPassword,\r\n        tel: newTel,\r\n        email: newEmail,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setMessage('회원가입 성공!');\r\n        setShowSignupModal(false); // Close the signup modal after successful signup\r\n      } else {\r\n        setMessage('회원가입 실패. 서버 오류가 발생했습니다.');\r\n      }\r\n    } catch (error) {\r\n      setMessage('회원가입 실패. 서버 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleLoginModalClose = () => {\r\n    setShowLoginModal(false);\r\n  };\r\n\r\n  const handleSignupModalOpen = () => {\r\n    setShowSignupModal(true);\r\n  };\r\n\r\n  const handleSignupModalClose = () => {\r\n    setShowSignupModal(false);\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsLoggedIn(true);\r\n    setShowLoginModal(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <div className='loginpage'>\r\n      {isLoggedIn ? (\r\n        <button type=\"button\" className=\"logout-button\" onClick={handleLogout}>\r\n          로그아웃\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <button type=\"button\" className=\"login-button\" onClick={handleLoginModalOpen}>\r\n            로그인\r\n          </button>\r\n          <button type=\"button\" className=\"signup-button\" onClick={handleSignupModalOpen}>\r\n            회원가입\r\n          </button>\r\n        </>\r\n      )}\r\n      \r\n      <LoginModal showModal={showLoginModal} closeModal={handleLoginModalClose} onLoginSuccess={handleLoginSuccess} />\r\n      <SignupModal showModal={showSignupModal} closeModal={handleSignupModalClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,oBAAoB,GAAGA,CAAA,KAAM;IACjCP,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMQ,kBAAkB,GAAG,MAAOC,CAAC,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;IAChE,MAAMC,WAAW,GAAGH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;IAChE,MAAME,MAAM,GAAGJ,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK;IACtD,MAAMG,QAAQ,GAAGL,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;IAE1D,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,aAAa,EAAE;QAC/CC,QAAQ,EAAET,WAAW;QACrBU,QAAQ,EAAEN,WAAW;QACrBO,GAAG,EAAEN,MAAM;QACXO,KAAK,EAAEN;MACT,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAC3BlB,UAAU,CAAC,UAAU,CAAC;QACtBJ,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACLI,UAAU,CAAC,yBAAyB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdnB,UAAU,CAAC,yBAAyB,CAAC;IACvC;EACF,CAAC;EAED,MAAMoB,qBAAqB,GAAGA,CAAA,KAAM;IAClC1B,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAM2B,qBAAqB,GAAGA,CAAA,KAAM;IAClCzB,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM0B,sBAAsB,GAAGA,CAAA,KAAM;IACnC1B,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAM2B,kBAAkB,GAAGA,CAAA,KAAM;IAC/BzB,aAAa,CAAC,IAAI,CAAC;IACnBJ,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAM8B,YAAY,GAAGA,CAAA,KAAM;IACzB1B,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEV,OAAA;IAAKqC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvB7B,UAAU,gBACTT,OAAA;MAAQuC,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,eAAe;MAACG,OAAO,EAAEJ,YAAa;MAAAE,QAAA,EAAC;IAEvE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAET5C,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,cAAc;QAACG,OAAO,EAAE3B,oBAAqB;QAAAyB,QAAA,EAAC;MAE9E;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5C,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,eAAe;QAACG,OAAO,EAAEP,qBAAsB;QAAAK,QAAA,EAAC;MAEhF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,eAED5C,OAAA,CAACJ,UAAU;MAACiD,SAAS,EAAExC,cAAe;MAACyC,UAAU,EAAEd,qBAAsB;MAACe,cAAc,EAAEZ;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChH5C,OAAA,CAACH,WAAW;MAACgD,SAAS,EAAEtC,eAAgB;MAACuC,UAAU,EAAEZ;IAAuB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV,CAAC;AAACxC,EAAA,CA/EID,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAiFf,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}