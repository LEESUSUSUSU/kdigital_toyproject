{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\kdigital_toyproject\\\\kdigital_toyproject\\\\soyun\\\\welfare\\\\src\\\\components\\\\InfoModal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InfoModal = props => {\n  var name = props.name;\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        setMessage(`Hello, ${username} 어서오세요!`);\n        closeModal();\n        // Do something after successful login (e.g., redirect to a new page)\n      } else {\n        setMessage('로그인 실패. 올바른 정보를 입력하세요.');\n      }\n    } catch (error) {\n      setMessage('로그인 실패. 서버 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = InfoModal;\nexport default InfoModal;\nvar _c;\n$RefreshReg$(_c, \"InfoModal\");","map":{"version":3,"names":["InfoModal","props","name","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","password","ok","setMessage","closeModal","error","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/kdigital_toyproject/kdigital_toyproject/soyun/welfare/src/components/InfoModal.js"],"sourcesContent":["const InfoModal = (props) => {\r\n\r\n    var name = props.name\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        try {\r\n          const response = await fetch('http://localhost:8080/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              username,\r\n              password,\r\n            }),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            setMessage(`Hello, ${username} 어서오세요!`);\r\n            closeModal();\r\n            // Do something after successful login (e.g., redirect to a new page)\r\n          } else {\r\n            setMessage('로그인 실패. 올바른 정보를 입력하세요.');\r\n          }\r\n        } catch (error) {\r\n          setMessage('로그인 실패. 서버 오류가 발생했습니다.');\r\n        }\r\n      };\r\n\r\nreturn (\r\n    <>\r\n    <h1>Hello {props.name}</h1>\r\n    \r\n    </>\r\n);\r\n\r\n}\r\n\r\nexport default InfoModal;"],"mappings":";;;AAAA,MAAMA,SAAS,GAAIC,KAAK,IAAK;EAEzB,IAAIC,IAAI,GAAGD,KAAK,CAACC,IAAI;EAErB,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ;UACRC;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,UAAU,CAAE,UAASH,QAAS,SAAQ,CAAC;QACvCI,UAAU,CAAC,CAAC;QACZ;MACF,CAAC,MAAM;QACLD,UAAU,CAAC,wBAAwB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdF,UAAU,CAAC,wBAAwB,CAAC;IACtC;EACF,CAAC;EAEP,oBACIG,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACAF,OAAA;MAAAE,QAAA,GAAI,QAAM,EAACpB,KAAK,CAACC,IAAI;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAEzB,CAAC;AAGP,CAAC;AAAAC,EAAA,GAtCK1B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}